name: Monthly Attendance Cleanup

on:
  schedule:
    # Run at midnight on the first day of each month
    - cron: "0 0 1 * *"
  # Allow manual triggering
  workflow_dispatch:

jobs:
  cleanup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Create cleanup script
        run: |
          cat > cleanup.js << 'EOL'
          const { initializeApp, cert } = require('firebase-admin/app');
          const { getFirestore } = require('firebase-admin/firestore');

          // Initialize Firebase Admin
          const app = initializeApp({
            credential: cert({
              projectId: process.env.FIREBASE_PROJECT_ID,
              clientEmail: process.env.FIREBASE_CLIENT_EMAIL,
              privateKey: process.env.FIREBASE_PRIVATE_KEY.replace(/\\n/g, '\n'),
            }),
          });

          const db = getFirestore(app);

          async function performCleanup() {
            try {
              const now = new Date();
              const lastMonth = new Date(now.getFullYear(), now.getMonth() - 1, 1);
              const monthYear = `${lastMonth.getMonth() + 1} ${lastMonth.getFullYear()}`;
              console.log(`Starting cleanup for ${monthYear}`);

              // Delete only the 'late-data' document in the 'late-comers' collection
              const lateDataDocRef = db.collection('late-comers').doc('late-data');
              await lateDataDocRef.delete();
              console.log(`Deleted 'late-data' document in 'late-comers' collection.`);

              return {
                success: true,
                message: `Successfully cleaned up 'late-data' document for ${monthYear}`,
              };
            } catch (error) {
              console.error('Cleanup error:', error);
              throw error;
            }
          }

          // Run the cleanup
          performCleanup()
            .then(result => {
              console.log('Success:', result);
              process.exit(0);
            })
            .catch(error => {
              console.error('Error:', error);
              process.exit(1);
            });
          EOL

      - name: Run cleanup script
        env:
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_CLIENT_EMAIL: ${{ secrets.FIREBASE_CLIENT_EMAIL }}
          FIREBASE_PRIVATE_KEY: ${{ secrets.FIREBASE_PRIVATE_KEY }}
        run: node cleanup.js

      - name: Notify on failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'Monthly Cleanup Failed',
              body: 'The monthly attendance cleanup workflow failed. Please check the [workflow run](${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}) for details.'
            });
